
%% Find nonzero elements in matrix 
clc;clear all; close all 
scriptLocation = fileparts(fileparts(mfilename('fullpath') ));
addpath([scriptLocation filesep 'scripts']);
addpathFolderStructure()

load(['results' filesep 'analysis_FigR1toR4_yOnly_87Par.mat'])

%% 

Datamat = rand(size(Datamat))*0.2 + 0.6;

%% see which simulations belong to this parameter set 

bin_SSPOCon = ( [varParList.STAwidth] == 3) & ...
            ( [varParList.STAshift] == -10) & ...
            ( [varParList.SSPOCon] == 1 ) & ...
            ( [varParList.xInclude] == 0) & ...
            ( [varParList.yInclude] == 1) & ...
            ( [varParList.NLDshift] == 0.5) & ...
            ( [varParList.NLDsharpness] == 10);
bin_SSPOCoff = ( [varParList.STAwidth] == 3) & ...
            ( [varParList.STAshift] == -10) & ...
            ( [varParList.SSPOCon] == 0 ) & ...
            ( [varParList.xInclude] == 0) & ...
            ( [varParList.yInclude] == 1) & ...
            ( [varParList.NLDshift] == 0.5) & ...
            ( [varParList.NLDsharpness] == 10);
figure();plot(bin_SSPOCon,'-o')
hold on;plot(bin_SSPOCoff,'-o')

ind_SSPOCon = find(bin_SSPOCon);
ind_SSPOCoff = find(bin_SSPOCoff);


n_plots = 16; 
n_x = 4;
n_y = 4; 
%% create subplot routine

color_vec = {'-r','-k'};
figure()
for j = 1:n_y
    for k = 1:n_x
        sub_nr = (j-1)*n_y + k;
        subplot(n_y,n_x, sub_nr)
        hold on
%         for j2 = 1:2
        for k = 1:size(Datamat,2)
            Dat_I = ind_SSPOCon(sub_nr)
%             meanVec(k) = mean(  nonzeros(Datamat(j,k,:))   );
%             stdVec(k) = std(  nonzeros(Datamat(j,k,:))   );
% 
%             iters = length(nonzeros(Datamat(j,k,:)) );
%             scatter( ones(iters,1)*k,nonzeros(Datamat(j,k,:)) , dotcol{j})
    
        end
        realNumbers = find(~isnan(meanVec));
        a = shadedErrorBar(realNumbers, meanVec(realNumbers),stdVec(realNumbers),col{j},0.8);
    

            
%         end

%         Data<at
        
        
%         legend_vec = [];
%         for l = fliplr(1:length(par.cases))
%             Meanvec = [];
%             STDvec = [];
%             
%             [~,~,~,ll,~]=ind2sub(size(Datamat(j,k,l,:,:)),find(Datamat(j,k,l,:,:)));
%             
%             qs = unique(ll);
% 
%             if l == 2
%                 for k2 = 1:length(qs)
%                    j2 = qs(k2);
%                    Meanvec(j2) = mean( nonzeros(Datamat(j,k,l,j2,:) )   );
%                    STDvec(j2) = std( nonzeros(Datamat(j,k,l,j2,:) )   );
%                 end
% 
%                 % plot error line 
% %                 a = shadedErrorBar(qs,Meanvec(qs),STDvec(qs),color_vec{l},0.1);
% 
%                 a = plot(qs,Meanvec(qs),'k');
%                 hold on
%             elseif l==1
%                 for k2 = 1:length(qs)
%                    j2 = qs(k2);
% %                    nonzeros(Datamat(j,k,l,j2,:) )   
%                    elem = length(nonzeros(Datamat(j,k,l,j2,:) )   );
%                    b=  scatter(ones(elem,1)*j2,nonzeros(Datamat(j,k,l,j2,:) ) ,'.r');
%                    Meanvec(j2) = mean( nonzeros(Datamat(j,k,l,j2,:) )   );
%                 end
%                 c = plot(qs,Meanvec(qs),'r');
%             end
%             
%         end
%         axis([0,max(qs),0.4,1])
%         title(['$\phi$* = ',num2str(par.phi_dist(k)), ' rad/s'] )
%         ylabel(['\theta* = ',num2str(par.theta_dist(j)), ' rad/s'])
    end
end


% %                 legend_vec = [b,a.mainLine];
%                 legend_vec = [b,c,a];
% % add legend to last plot of first row 
% subplot( length(unique(ii)), length(unique(jj)), length(unique(jj)) )
% % legend(legend_vec,par.cases,'Location','Best')
% legend(legend_vec,{par.cases{1},'mean SSPOC filt',par.cases{2}},'Location','Best')
% 
% 

